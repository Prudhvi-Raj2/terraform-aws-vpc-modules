- name: create ec2 and route 53
  connection: local
  hosts:  local
  vars:
    subnet_id: subnet-0b01fc2830d27fd2f
    sg_id: sg-0d5b9da6449c34cb3
    ami_id: ami-09c813fb71547fc4f
    instance_type: t3.micro
    zone: kambalas.shop
    instances:
    - mysql
    - backend
    - frontend
  tasks:
  - name: Install AWS python library
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - boto3
    - PyMySQL
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      subnet_id: "{{ subnet_id }}"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id  }}"
      instance_type: "{{ instance_type }}"
    loop: "{{ instances }}" 
    register: ec2_info
  
  # - name: print ec2_info
  #   ansible.builtin.debug:
  #     msg: "{{ item.item }} : {{ item.instances[0].private_ip_address}}"
  #   loop: "{{ ec2_info.results }}"

  - name: print private private_ip_addresses
    ansible.builtin.debug:
      msg: "{{  item.instances[0].private_ip_address }}"
    loop: "{{ ec2_info.results }}"
  
  - name: create private ip r53 records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item}}.{{ zone }}"
      type: A
      ttl: 1
      value: "{{  item.instances[0].private_ip_address }}"
      wait: true
    loop: "{{ ec2_info.results}}"  

  - name: create public ip r53 records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}"
      type: A
      ttl: 1
      value: "{{  item.instances[0].public_ip_address }}"
      wait: true
    loop: "{{ ec2_info.results}}"
    when: item.item == "frontend"
    
      